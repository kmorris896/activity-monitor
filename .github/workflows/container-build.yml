name: Container Build
# This workflow triggers when a new tag is pushed to the repository.
# If everything goes right, it should be the last workflow that fires.

on:
  push:
    tags:
      - v*
  pull_request:
    types: [ opened, synchronize, reopened, labeled ]

defaults:
  run:
    shell: bash

jobs:
  container-build:
    if: startsWith(github.ref, 'refs/tags/v') || ${{ github.event.label.name == 'release candidate' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Create Tag
        id: create_tag
        uses: anothrNick/github-tag-action@1.34.0
        if: startsWith(github.ref, 'refs/heads/main') || ${{ github.event.label.name == 'release candidate' }}
        env:
          GITHUB_TOKEN: ${{ secrets.TAGACTION_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: main
          VERBOSE: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/kmorris896/activity-monitor
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
             "org.opencontainers.image.description=Activity Monitor for Discord Servers"

      - name: Set up docker Buildx
        uses: docker/setup-buildx-action@v1
    
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          platforms: linux/amd64
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_COMMIT=${{ github.sha }}  
            SEMVER=${{ steps.create_tag.tag }}
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
